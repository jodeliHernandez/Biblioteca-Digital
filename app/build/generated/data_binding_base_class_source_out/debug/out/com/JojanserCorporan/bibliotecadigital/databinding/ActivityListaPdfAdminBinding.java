// Generated by view binder compiler. Do not edit!
package com.JojanserCorporan.bibliotecadigital.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.JojanserCorporan.bibliotecadigital.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityListaPdfAdminBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText EtBuscarLibroAdmin;

  @NonNull
  public final RecyclerView RvLibrosAdmin;

  @NonNull
  public final TextView TxtCategoriaLibro;

  @NonNull
  public final TextView TxtTituloLibro;

  @NonNull
  public final ImageButton ibRegresar;

  @NonNull
  public final RelativeLayout main;

  @NonNull
  public final RelativeLayout toolbarRLListarPdf;

  private ActivityListaPdfAdminBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText EtBuscarLibroAdmin, @NonNull RecyclerView RvLibrosAdmin,
      @NonNull TextView TxtCategoriaLibro, @NonNull TextView TxtTituloLibro,
      @NonNull ImageButton ibRegresar, @NonNull RelativeLayout main,
      @NonNull RelativeLayout toolbarRLListarPdf) {
    this.rootView = rootView;
    this.EtBuscarLibroAdmin = EtBuscarLibroAdmin;
    this.RvLibrosAdmin = RvLibrosAdmin;
    this.TxtCategoriaLibro = TxtCategoriaLibro;
    this.TxtTituloLibro = TxtTituloLibro;
    this.ibRegresar = ibRegresar;
    this.main = main;
    this.toolbarRLListarPdf = toolbarRLListarPdf;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityListaPdfAdminBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityListaPdfAdminBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_lista_pdf_admin, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityListaPdfAdminBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Et_buscar_libro_admin;
      EditText EtBuscarLibroAdmin = ViewBindings.findChildViewById(rootView, id);
      if (EtBuscarLibroAdmin == null) {
        break missingId;
      }

      id = R.id.Rv_libros_admin;
      RecyclerView RvLibrosAdmin = ViewBindings.findChildViewById(rootView, id);
      if (RvLibrosAdmin == null) {
        break missingId;
      }

      id = R.id.Txt_categoria_libro;
      TextView TxtCategoriaLibro = ViewBindings.findChildViewById(rootView, id);
      if (TxtCategoriaLibro == null) {
        break missingId;
      }

      id = R.id.Txt_titulo_libro;
      TextView TxtTituloLibro = ViewBindings.findChildViewById(rootView, id);
      if (TxtTituloLibro == null) {
        break missingId;
      }

      id = R.id.ib_regresar;
      ImageButton ibRegresar = ViewBindings.findChildViewById(rootView, id);
      if (ibRegresar == null) {
        break missingId;
      }

      RelativeLayout main = (RelativeLayout) rootView;

      id = R.id.toolbarRLListarPdf;
      RelativeLayout toolbarRLListarPdf = ViewBindings.findChildViewById(rootView, id);
      if (toolbarRLListarPdf == null) {
        break missingId;
      }

      return new ActivityListaPdfAdminBinding((RelativeLayout) rootView, EtBuscarLibroAdmin,
          RvLibrosAdmin, TxtCategoriaLibro, TxtTituloLibro, ibRegresar, main, toolbarRLListarPdf);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
